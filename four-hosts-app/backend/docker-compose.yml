version: '3.8'

# Exa provider env (reusable mapping for backend services)
x-backend-exa-env: &backend-exa-env
  EXA_API_KEY: ${EXA_API_KEY}
  SEARCH_DISABLE_EXA: ${SEARCH_DISABLE_EXA:-0}
  EXA_INCLUDE_TEXT: ${EXA_INCLUDE_TEXT:-0}
  EXA_SEARCH_AS_PRIMARY: ${EXA_SEARCH_AS_PRIMARY:-0}
  EXA_BASE_URL: ${EXA_BASE_URL:-https://api.exa.ai}
  EXA_TIMEOUT_SEC: ${EXA_TIMEOUT_SEC:-15}

services:
  postgres:
    image: postgres:15-alpine
    # container_name removed to avoid conflicts if top-level stack also runs
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fourhosts
    ports:
      - "127.0.0.1:5432:5432"  # bind to loopback to avoid internet exposure
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fourhosts"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    # container_name removed to avoid conflicts if top-level stack also runs
    ports:
      - "127.0.0.1:6379:6379"  # bind to loopback to avoid internet exposure
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # NOTE: This backend-only compose file does not define the FastAPI
  # backend service. The main stack at ../docker-compose.yml contains
  # the backend. Ensure it includes the EXA_* environment variables
  # (see x-backend-exa-env defined above). Example:
  #
  # backend:
  #   environment:
  #     <<: *backend-exa-env

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
