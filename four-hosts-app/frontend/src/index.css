@import "tailwindcss";

/* Theme Variables */
:root {
  /* Paradigm colors (RGB format for opacity support) */
  --paradigm-dolores-rgb: 220 83 83;
  --paradigm-teddy-rgb: 231 148 85;
  --paradigm-bernard-rgb: 74 122 223;
  --paradigm-maeve-rgb: 63 181 127;

  /* Base colors (RGB format for opacity support) */
  --surface-rgb: 255 255 255;
  --surface-subtle-rgb: 250 250 250;
  --surface-muted-rgb: 245 245 245;
  --border-rgb: 229 229 229;
  --text-rgb: 23 23 23;
  --text-subtle-rgb: 115 115 115;
  --text-muted-rgb: 163 163 163;

  /* Semantic colors (RGB format for opacity support) */
  --primary-rgb: 59 130 246;
  --success-rgb: 16 185 129;
  --error-rgb: 239 68 68;

  /* Legacy hex values for gradients */
  --paradigm-dolores: #dc5353;
  --paradigm-teddy: #e79455;
  --paradigm-bernard: #4a7adf;
  --paradigm-maeve: #3fb57f;
  --primary: #3b82f6;
  --success: #10b981;
  --error: #ef4444;
}

/* Dark mode */
.dark {
  /* RGB values for dark mode */
  --surface-rgb: 10 10 10;
  --surface-subtle-rgb: 23 23 23;
  --surface-muted-rgb: 38 38 38;
  --border-rgb: 64 64 64;
  --text-rgb: 250 250 250;
  --text-subtle-rgb: 163 163 163;
  --text-muted-rgb: 115 115 115;
}

/* Use CSS variables for colors */
@layer base {
  :root {
    --surface: rgb(var(--surface-rgb));
    --surface-subtle: rgb(var(--surface-subtle-rgb));
    --surface-muted: rgb(var(--surface-muted-rgb));
    --border: rgb(var(--border-rgb));
    --text: rgb(var(--text-rgb));
    --text-subtle: rgb(var(--text-subtle-rgb));
    --text-muted: rgb(var(--text-muted-rgb));
  }

  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    color: var(--text);
    background-color: var(--surface);
  }

  :focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--primary), 0 0 0 4px var(--surface);
  }

  /* Screen reader only utility */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .not-sr-only {
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

/* Component Styles */
@layer components {
  /* Cards */
  .card {
    padding: 1.5rem;
    border-radius: 0.5rem;
    border-width: 1px;
    border-style: solid;
    background-color: var(--surface);
    border-color: var(--border);
  }

  .card-hover {
    padding: 1.5rem;
    border-radius: 0.5rem;
    border-width: 1px;
    border-style: solid;
    transition-property: box-shadow;
    transition-duration: 150ms;
    background-color: var(--surface);
    border-color: var(--border);
  }
  
  .card-hover:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  }

  .card-interactive {
    padding: 1.5rem;
    border-radius: 0.5rem;
    border-width: 1px;
    border-style: solid;
    transition-property: box-shadow;
    transition-duration: 150ms;
    cursor: pointer;
    transition: all 200ms;
    background-color: var(--surface);
    border-color: var(--border);
  }
  
  .card-interactive:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  }

  .card-interactive:hover {
    border-color: var(--primary);
    transform: translateY(-2px);
  }

  /* Paradigm cards */
  .paradigm-card {
    padding: 1.5rem;
    border-radius: 0.5rem;
    border-width: 1px;
    border-style: solid;
    transition: all 200ms;
    background-color: var(--surface);
    border-color: var(--border);
  }

  /* Paradigm borders using CSS variables */
  .paradigm-border-dolores {
    border-color: rgb(var(--paradigm-dolores-rgb));
  }

  .paradigm-border-teddy {
    border-color: rgb(var(--paradigm-teddy-rgb));
  }

  .paradigm-border-bernard {
    border-color: rgb(var(--paradigm-bernard-rgb));
  }

  .paradigm-border-maeve {
    border-color: rgb(var(--paradigm-maeve-rgb));
  }

  /* Button base styles */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
  }
  
  .btn:disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  /* Button variants using CSS custom properties */
  .btn-primary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    background-color: rgb(var(--primary-rgb));
    color: white;
  }
  
  .btn-primary:hover:not(:disabled) {
    background-color: rgb(var(--primary-rgb) / 0.9);
  }

  .btn-secondary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    background-color: var(--surface-muted);
    color: var(--text);
  }
  
  .btn-secondary:hover:not(:disabled) {
    background-color: var(--surface-subtle);
  }

  .btn-ghost {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    background-color: transparent;
  }
  
  .btn-ghost:hover:not(:disabled) {
    background-color: var(--surface-muted);
  }

  /* Paradigm buttons - base style defined inline in each variant */

  .btn-paradigm-dolores {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    color: white;
    background-color: rgb(var(--paradigm-dolores-rgb));
  }

  .btn-paradigm-dolores:hover:not(:disabled) {
    filter: brightness(1.1);
  }

  .btn-paradigm-teddy {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    color: white;
    background-color: rgb(var(--paradigm-teddy-rgb));
  }

  .btn-paradigm-teddy:hover:not(:disabled) {
    filter: brightness(1.1);
  }

  .btn-paradigm-bernard {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    color: white;
    background-color: rgb(var(--paradigm-bernard-rgb));
  }

  .btn-paradigm-bernard:hover:not(:disabled) {
    filter: brightness(1.1);
  }

  .btn-paradigm-maeve {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 150ms;
    color: white;
    background-color: rgb(var(--paradigm-maeve-rgb));
  }

  .btn-paradigm-maeve:hover:not(:disabled) {
    filter: brightness(1.1);
  }

  /* Inputs */
  .input {
    width: 100%;
    border-radius: 0.375rem;
    border-width: 1px;
    border-style: solid;
    padding: 0.5rem 0.75rem;
    transition: all 150ms;
    border-color: var(--border);
    background-color: var(--surface);
    color: var(--text);
  }
  
  .input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--primary), 0 0 0 4px var(--surface);
  }
  
  .input::placeholder {
    color: var(--text-muted);
  }

  /* Badges */
  .badge {
    display: inline-flex;
    align-items: center;
    border-radius: 9999px;
    padding: 0.125rem 0.625rem;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 500;
  }

  .badge-default {
    display: inline-flex;
    align-items: center;
    border-radius: 9999px;
    padding: 0.125rem 0.625rem;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 500;
    background-color: var(--surface-muted);
    color: var(--text-subtle);
  }

  /* Loading */
  .spinner {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    border-width: 2px;
    border-color: currentColor;
    border-right-color: transparent;
    border-radius: 9999px;
    animation: spin 1s linear infinite;
  }
}

/* Utility Classes */
@layer utilities {
  /* Paradigm backgrounds */
  .paradigm-bg-dolores {
    background-color: rgb(var(--paradigm-dolores-rgb) / 0.1);
  }

  .paradigm-bg-teddy {
    background-color: rgb(var(--paradigm-teddy-rgb) / 0.1);
  }

  .paradigm-bg-bernard {
    background-color: rgb(var(--paradigm-bernard-rgb) / 0.1);
  }

  .paradigm-bg-maeve {
    background-color: rgb(var(--paradigm-maeve-rgb) / 0.1);
  }

  /* Text gradients */
  .text-gradient {
    background-image: linear-gradient(to right, var(--primary), rgb(var(--primary-rgb) / 0.5));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
  }

  /* Brand gradients */
  .gradient-brand {
    background-image: linear-gradient(to right, var(--primary), var(--paradigm-maeve));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
  }

  .gradient-accent {
    background-image: linear-gradient(to right, var(--paradigm-dolores), var(--paradigm-teddy));
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
  }

  /* Glass effect */
  .glass {
    backdrop-filter: blur(4px);
    background-color: rgb(var(--surface-rgb) / 0.8);
  }

  /* Linear gradient backgrounds */
  .bg-linear-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-from), var(--tw-gradient-to));
  }

  /* Hover lift effect */
  .hover-lift {
    transition: all 200ms;
  }

  .hover-lift:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  /* Theme transition - scoped properly */
  .theme-transition,
  .theme-transition * {
    transition-property: background-color, color, border-color;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
  }

  /* Animation utilities */
  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }

  .animate-slide-up {
    animation: slide-up 0.3s ease-out;
  }

  .animate-slide-down {
    animation: slide-down 0.3s ease-out;
  }

  .animate-scale-in {
    animation: scale-in 0.2s ease-out;
  }
}

/* Animation keyframes */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Mobile-specific utilities */
@layer utilities {
  /* Touch-friendly tap targets */
  .touch-target {
    position: relative;
    min-height: 44px;
    min-width: 44px;
  }

  .touch-target::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: max(100%, 44px);
    height: max(100%, 44px);
  }

  /* Responsive text utilities */
  .text-responsive-sm {
    font-size: clamp(0.875rem, 2.5vw, 1rem);
  }

  .text-responsive-base {
    font-size: clamp(1rem, 3vw, 1.125rem);
  }

  .text-responsive-lg {
    font-size: clamp(1.125rem, 3.5vw, 1.25rem);
  }

  .text-responsive-xl {
    font-size: clamp(1.25rem, 4vw, 1.5rem);
  }

  .text-responsive-2xl {
    font-size: clamp(1.5rem, 5vw, 2rem);
  }

  .text-responsive-3xl {
    font-size: clamp(1.875rem, 6vw, 2.5rem);
  }

  /* Mobile-optimized spacing */
  .mobile-safe-area {
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
    padding-bottom: env(safe-area-inset-bottom);
  }

  /* Touch-friendly hover states */
  @media (hover: hover) and (pointer: fine) {
    .hover-only\:opacity-80:hover {
      opacity: 0.8;
    }

    .hover-only\:scale-105:hover {
      transform: scale(1.05);
    }
  }

  /* Active states for touch */
  .active\:scale-95:active {
    transform: scale(0.95);
  }

  .active\:opacity-80:active {
    opacity: 0.8;
  }

  /* Disable text selection on interactive elements */
  .select-none-mobile {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }

  /* Smooth scrolling on mobile */
  .mobile-scroll-smooth {
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
  }

  /* Hide scrollbar on mobile */
  .scrollbar-hide-mobile {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .scrollbar-hide-mobile::-webkit-scrollbar {
    display: none;
  }
}

/* Mobile-first media queries */
@media (max-width: 639px) {
  /* Adjust button padding for mobile */
  .btn {
    padding: 0.625rem 1.25rem;
    min-height: 44px;
  }

  /* Larger touch targets for mobile */
  .card-interactive {
    min-height: 60px;
  }

  /* Mobile-optimized input fields */
  .input {
    min-height: 44px;
    /* Let browser handle zoom prevention via viewport meta tag */
  }

  /* Adjust spacing for mobile */
  .card {
    padding: 1rem;
  }
}

/* Tablet-specific adjustments */
@media (min-width: 640px) and (max-width: 1023px) {
  .btn {
    padding: 0.5rem 1.25rem;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Prefers color scheme support */
@media (prefers-color-scheme: dark) {
  :root:not(.light) {
    /* RGB values for dark mode */
    --surface-rgb: 10 10 10;
    --surface-subtle-rgb: 23 23 23;
    --surface-muted-rgb: 38 38 38;
    --border-rgb: 64 64 64;
    --text-rgb: 250 250 250;
    --text-subtle-rgb: 163 163 163;
    --text-muted-rgb: 115 115 115;
  }
}