/* Animation utilities and micro-interactions */

/* Button ripple effect */
@layer utilities {
  .ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple-animation 0.6s ease-out;
    background-color: rgb(255 255 255 / 0.3);
    pointer-events: none;
  }
}

@keyframes ripple-animation {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/* Keyframe animations */
@keyframes slide-up {
  from {
    transform: translateY(10px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.95);
    opacity: 0;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

@keyframes success-check {
  0% {
    stroke-dashoffset: 100;
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

@keyframes error-shake {

  0%,
  100% {
    transform: translateX(0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-4px);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translateX(4px);
  }
}

@keyframes pulse-border {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.5);
  }

  70% {
    box-shadow: 0 0 0 8px rgba(59, 130, 246, 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

/* New animations for v4 */
@keyframes bounce-in {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }

  50% {
    transform: scale(1.05);
  }

  70% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(100%);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-in-left {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes fade-in-up {
  from {
    transform: translateY(20px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Animation classes */
@layer utilities {
  .animate-slide-up {
    animation: slide-up 0.3s ease-out;
  }

  .animate-slide-down {
    animation: slide-down 0.3s ease-out;
  }

  .animate-fade-in {
    animation: fade-in 0.4s ease-out;
  }

  .animate-scale-in {
    animation: scale-in 0.3s ease-out;
  }

  .animate-shimmer {
    background: linear-gradient(
        90deg,
        rgb(255 255 255 / 0) 0%,
        rgb(255 255 255 / 0.2) 20%,
        rgb(255 255 255 / 0.5) 60%,
        rgb(255 255 255 / 0)
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s ease-in-out infinite;
  }

  .dark .animate-shimmer {
    background: linear-gradient(
        90deg,
        rgb(255 255 255 / 0) 0%,
        rgb(255 255 255 / 0.1) 20%,
        rgb(255 255 255 / 0.2) 60%,
        rgb(255 255 255 / 0)
    );
  }

  .animate-success-check {
    animation: success-check 0.6s ease-out forwards;
    stroke-dasharray: 100;
  }

  .animate-shake {
    animation: error-shake 0.5s ease-in-out;
  }

  .animate-pulse-border {
    animation: pulse-border 1.5s ease-in-out;
  }

  .animate-bounce-in {
    animation: bounce-in 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .animate-slide-in-right {
    animation: slide-in-right 0.4s ease-out;
  }

  .animate-slide-in-left {
    animation: slide-in-left 0.4s ease-out;
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.5s ease-out;
  }
}

/* Loading states */
@layer utilities {
  .loading-dots::after {
    content: '';
    animation: loading-dots 1.5s infinite;
  }
}

@keyframes loading-dots {
  0% {
    content: '';
  }

  25% {
    content: '.';
  }

  50% {
    content: '..';
  }

  75% {
    content: '...';
  }
}

/* Success and error states */
@layer utilities {
  .success-glow {
    box-shadow: 0 0 20px rgb(16 185 129 / 0.3);
    transition: box-shadow 0.3s ease-out;
  }

  .error-glow {
    box-shadow: 0 0 20px rgb(239 68 68 / 0.3);
    transition: box-shadow 0.3s ease-out;
  }

  /* Stagger animations for lists */
  .stagger-animation > * {
    animation: fade-in-up 0.5s ease-out both;
  }

  .stagger-animation > *:nth-child(1) {
    animation-delay: 0.05s;
  }

  .stagger-animation > *:nth-child(2) {
    animation-delay: 0.1s;
  }

  .stagger-animation > *:nth-child(3) {
    animation-delay: 0.15s;
  }

  .stagger-animation > *:nth-child(4) {
    animation-delay: 0.2s;
  }

  .stagger-animation > *:nth-child(5) {
    animation-delay: 0.25s;
  }

  .stagger-animation > *:nth-child(6) {
    animation-delay: 0.3s;
  }

  .stagger-animation > *:nth-child(7) {
    animation-delay: 0.35s;
  }

  .stagger-animation > *:nth-child(8) {
    animation-delay: 0.4s;
  }

  /* For more than 8 children, use a general pattern */
  .stagger-animation > *:nth-child(n+9) {
    animation-delay: calc(0.4s + (0.05s * (n - 9)));
  }
}

/* Prefers reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  /* Remove animations from specific components */
  .animate-slide-up,
  .animate-slide-down,
  .animate-fade-in,
  .animate-scale-in,
  .animate-bounce-in,
  .animate-slide-in-right,
  .animate-slide-in-left,
  .animate-fade-in-up,
  .animate-shake,
  .animate-pulse-border {
    animation: none !important;
  }

  /* Disable hover transforms */
  .hover-lift:hover,
  .card-interactive:hover,
  .paradigm-card:hover,
  .btn:hover {
    transform: none !important;
  }

  /* Disable ripple effect */
  .ripple {
    display: none !important;
  }

  /* Disable shimmer effect */
  .animate-shimmer,
  .card-interactive::after,
  .paradigm-card::before {
    animation: none !important;
  }

  /* Disable gradient animations */
  .gradient-shift {
    animation: none !important;
  }

  /* Keep essential loading indicators but make them simpler */
  .loading-spinner {
    animation: spin 1.5s linear infinite !important;
  }
}
